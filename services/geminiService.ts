import { GoogleGenAI, Modality, GenerateContentResponse } from "@google/genai";
import type { Gender } from '../types';

// API key is handled by the environment variable `process.env.API_KEY`
const ai = new GoogleGenAI({ apiKey: process.env.API_KEY! });

const createPrompt = (gender: Gender): string => {
  const baseInstructions = `
You are an expert photographer specializing in professional headshots. Your task is to refine the user's uploaded portrait.
Follow these instructions precisely:
1.  **Refine Face:**
    *   Make the person face the camera directly if they are not already.
    *   Subtly improve skin texture, removing oil, shine, and minor blemishes.
    *   Adjust lighting on the face to be bright, even, and flattering. Eliminate harsh shadows. Make the face appear slightly lighter and clearer.
    *   Do not alter the person's core facial features.
2.  **Background:** Completely replace the existing background with a solid, uniform, and clean white background (#FFFFFF).
3.  **Clothing:**`;

  const genderSpecificInstructions = gender === 'male'
      ? "Change the person's attire to a professional business suit. The suit should look natural and fit the person well."
      : "Keep the original clothing worn by the person in the photo. Do not change their attire.";

  const finalInstructions = `
4.  **Cropping:** Crop the final image to a standard headshot format. The frame should start from the top of the shoulders and extend to just above the top of the head, leaving a small, balanced amount of space.
5.  **Final Output:** The resulting image must be high-quality, realistic, and suitable for use on a corporate profile, LinkedIn, or a resume. Do not add any text, watermarks, or artistic filters.`;

  return `${baseInstructions} ${genderSpecificInstructions} ${finalInstructions}`;
};


export const generateHeadshot = async (base64Image: string, mimeType: string, gender: Gender): Promise<string> => {
  const imagePart = {
    inlineData: {
      data: base64Image,
      mimeType: mimeType,
    },
  };

  const textPart = {
    text: createPrompt(gender),
  };

  try {
    const response: GenerateContentResponse = await ai.models.generateContent({
      model: 'gemini-2.5-flash-image-preview',
      contents: {
        parts: [imagePart, textPart],
      },
      config: {
        responseModalities: [Modality.IMAGE, Modality.TEXT],
      },
    });

    for (const part of response.candidates?.[0]?.content?.parts || []) {
      if (part.inlineData) {
        return `data:${part.inlineData.mimeType};base64,${part.inlineData.data}`;
      }
    }
    throw new Error("No image was generated by the AI. The input may have been considered unsafe.");
  } catch (error) {
    console.error("Error generating headshot:", error);
    if (error instanceof Error) {
        throw new Error(`The AI service failed to process the image. Reason: ${error.message}`);
    }
    throw new Error("The AI service failed to process the image due to an unknown error.");
  }
};